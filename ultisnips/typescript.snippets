extends javascript

# General

snippet classi "implements class definition"
class ${1:name} implements ${2:class} {
	$0
}
endsnippet

# Angular

snippet impa "angular import"
import { ${1:members} } from '@angular/${2:module}';
endsnippet

snippet comp "component annotation"
@Component({
	selector: '${1:selector}',
	templateUrl: '${2:file}.html'
})
endsnippet

snippet comps "component annotation"
@Component({
	selector: '${1:selector}',
	templateUrl: '${2:file}.html',
	styleUrls: ['$2.css']}
})
endsnippet

snippet sp "private service parameter" w
private ${1:name}: ${2:class}
endsnippet

snippet spu "public service parameter" w
public ${1:name}: ${2:class}
endsnippet

snippet nav "router navigation"
this.router.navigate([${1:route}]${2:, { relativeTo: this.route }});
endsnippet

snippet prom "promise" w
Promise<${1:type}>
endsnippet

snippet promc "promise call"
${1:function}
	.then((${2:params}) => ${3:{
		${4:body}
	}})
	.catch((${5:params}) => ${6:{
		${7:body}
	}});
endsnippet

snippet ngmod "ngmodule annotation"
@NgModule({
	${1:imports: [${2:imports}],
	}${3:exports: [${4:exports}],
	}${5:declarations: [${6:declarations}],
	}${7:entryComponents: [${8:entryComponents}],
	}${9:providers: [${10:providers}]}
})
endsnippet

snippet routec "component route definition"
{
	path: ${1:path},
	component: ${2:component}
}
endsnippet

snippet router "redirect route definition"
{
	path: '',
	redirectTo: ${1:path},
	pathMatch: 'full'
}
endsnippet
