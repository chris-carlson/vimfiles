extends javascript

# Variables

snippet varn "variable with type"
${1:name}: ${2:type}
endsnippet

# Classes

snippet imp "implements statement"
implements ${1:class}
endsnippet

# Angular

snippet impa "angular import"
import { ${1:members} } from '@angular/${2:module}';
endsnippet

snippet comp "component annotation"
@Component({
	selector: '${1:selector}',
	templateUrl: '${2:file}.html'
})
endsnippet

snippet comps "component annotation"
@Component({
	selector: '${1:selector}',
	templateUrl: '${2:file}.html',
	styleUrls: ['$2.css']}
})
endsnippet

snippet ser "service parameter" w
${1:private} ${2/\w+/\l$0/}: ${2:class}
endsnippet

snippet nav "router navigation"
this.router.navigate([${1:route}]${2:, { relativeTo: this.route }});
endsnippet

snippet prom "promise" w
Promise<${1:type}>
endsnippet

snippet promc "promise call"
${1:function}
	.then((${2:params}) => ${3:body})
	.catch((${4:params}) => ${5:body});
endsnippet

snippet ngmod "ngmodule annotation"
@NgModule({
	${1:imports: [${2:imports}],
	}${3:exports: [${4:exports}],
	}${5:declarations: [${6:declarations}],
	}${7:entryComponents: [${8:entryComponents}],
	}${9:providers: [${10:providers}]}
})
endsnippet

snippet route "component route definition"
{
	path: ${1:path},
	component: ${2:component}
}
endsnippet

snippet router "redirect route definition"
{
	path: '',
	redirectTo: ${1:path},
	pathMatch: 'full'
}
endsnippet

snippet input "input declaration"
@Input() ${1:name}: ${2:type};
endsnippet
