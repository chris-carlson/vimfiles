extends markup

# React

snippet rimp "import react"
import React from 'react';
endsnippet

snippet rclass "class which extends the react component"
class ${1:name} extends React.Component {
	$0
}

export default $1
endsnippet

snippet rcon "constructor with props"
constructor(props) {
	super(props);
}
endsnippet

snippet state "state declaration"
this.state = {${1:state}};
endsnippet

snippet rfun "class function"
${1:name} = ${2:(${3:params)}} => {
	$0
}
endsnippet

snippet ren "render function"
render() {
	return (
		$0
	);
}
endsnippet

snippet rt "react tag with no attributes" i
<${1:name} />
endsnippet

snippet rta "react tag with attributes" i
<${1:name} ${2:attributes} />
endsnippet

snippet ra "attribute reference" i
${1:name}={${2:value}}
endsnippet

# Redux

snippet props "propTypes declaration"
${1:component}.propTypes = {
	$0
};
endsnippet

snippet prop "PropTypes variable type"
${1:variable}: PropTypes.${2:type}.isRequired
endsnippet

snippet act "action declaration"
export const ${1:name} = ${2:(${3:params})} => {
	return {
		$0
	};
};
endsnippet

snippet red "reducer declaration"
const ${1:name} = (state = ${2:default}, action) => {
	switch (action.type) {
		case '${3:action}':
			$0
		default:
			return state;
	}
};
endsnippet
